Параллельные вычисления активно используются в различных областях разработки ПО. При этом разработка многопоточных программ сопряжена с дополнительными сложностями из-за необходимости организации взаиимодействия потоков между собой. Это приводит к таким типичным ошибкам программирования, как взаимные блокировки, гонки данных и т.д. Эти ошибки трудно локализовывать в коде программы и отлажывать. На практике, программисты используют неформальные правила и техники, которые позволяют проектировать многопоточные программы корректно. Однако, разработчики могут не знать тех или иных правил или неверно их применять. Поэтому возможность формальизации и проверки данных правил была бы весьма полезной.

Языки программирования с зависимыми типами позволяют формально доказывать различные свойства разрабатываемых на них программ. Данные свойства проверяются статически, что позволяет отвеграть некорректные программы на этапе компиляции. Поэтому, использование возможностей таких языков для разработки корректных многопоточных программ выглядит весьма привлекательным. Не смотря на это, системы с зависимыми типами долгое время использовались, в основном, для академических нужд, и их возможности для решения конкретных практических задач исследованы слабо. Однако, в последнее время наблюдается попытки использовать такие системы на практике, в частности появляются языки общего назначения с зависимыми типами. 

Исследованию возможностей применения систем с зависимыми типами для решения задач построения корректных многопоточных программ и посвящена данная диссертационная работа.
